/* eslint-disable react-native/no-inline-styles */
import React, { useState } from 'react';
import { StyleSheet, View } from 'react-native';
import {
  ScrollView,
  TouchableNativeFeedback,
} from 'react-native-gesture-handler';
import {
  Switch,
  Divider,
  Text,
  Subheading,
  Appbar,
  useTheme,
} from 'react-native-paper';
import { useAsyncStorage } from 'use-async-storage';
import RNRestart from 'react-native-restart';
import Spacer from '../components/Spacer';
import { Playlist } from '../enums/Playlist';
import { AppState, showSnakbar, useApp } from '../states/app';
import { isTablet } from 'react-native-device-info';

const SettingsScreen = ({ navigation }) => {
  const [needToReload, setNeedToReload] = useState(false);
  const app: AppState = useApp();
  const [playlistId] = useAsyncStorage<string | null>(Playlist.id, null);
  const [fileUrl] = useAsyncStorage<string | null>('fileUrl', null);
  const [hiddenCategories, setHiddenCategories] = useAsyncStorage<
    string | null
  >('hiddenCategories', []);
  const { colors } = useTheme();

  const toggleHiddenCategories = (category: string): void => {
    let hiddenCategoriesUpdated = hiddenCategories;

    if (hiddenCategories?.includes(category)) {
      hiddenCategoriesUpdated = hiddenCategories.filter((c) => c !== category);
    } else {
      hiddenCategoriesUpdated = [...hiddenCategories, category];
    }

    setHiddenCategories(hiddenCategoriesUpdated);
    setNeedToReload(true);
    showSnakbar({
      message:
        'Settings updated, you need to reload app by press reload icon on the top right corner',
    });
  };

  return (
    <View style={{ flex: 1, backgroundColor: colors.background }}>
      <ScrollView>
        <Appbar.Header>
          <Appbar.BackAction onPress={() => navigation.goBack()} />
          <Appbar.Content title="Settings" />
          {needToReload && (
            <Appbar.Action icon="reload" onPress={() => RNRestart.Restart()} />
          )}
        </Appbar.Header>
        <View style={styles.body}>
          <Spacer height={20} />
          <Subheading style={styles.subheading}>Your playlist id</Subheading>
          <Spacer height={10} />
          <Text>
            This is your playlist id generated by the server. Save and use it
            for login you.
          </Text>
          <Spacer height={10} />
          <View style={styles.content}>
            <Text>{playlistId}</Text>
          </View>
          <Spacer height={30} />
          {fileUrl && fileUrl !== '' && (
            <>
              <Divider />
              <Spacer height={20} />
              <Subheading style={styles.subheading}>Your file</Subheading>
              <Spacer height={10} />
              <Text>This is the file you have uploaded.</Text>
              <Spacer height={10} />
              <View style={styles.content}>
                <Text>{fileUrl}</Text>
              </View>
              <Spacer height={30} />
            </>
          )}
          <Divider />
          <Spacer height={20} />
          <Subheading style={styles.subheading}>Hide categories</Subheading>
          <Spacer height={10} />
          <Text>
            Check all categories you want hide. All uncheck categories will be
            displayed.
          </Text>
          <Spacer height={10} />
          <View style={styles.categories}>
            {app.categories.map((c) => (
              <TouchableNativeFeedback
                key={c}
                onPress={() => toggleHiddenCategories(c)}>
                <View style={styles.category}>
                  <Text style={styles.categoryLabel}>{c}</Text>
                  <Switch value={Boolean(hiddenCategories?.includes(c))} />
                </View>
              </TouchableNativeFeedback>
            ))}
          </View>
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  subheading: {
    fontWeight: 'bold',
    textTransform: 'uppercase',
  },
  body: { paddingHorizontal: 20 },
  categories: {
    flexDirection: isTablet() ? 'row' : 'column',
    flexWrap: isTablet() ? 'wrap' : 'nowrap',
    flex: 1,
  },
  category: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingBottom: 15,
  },
  categoryLabel: { paddingRight: 5 },
  content: { flexDirection: 'row', flexWrap: 'wrap' },
});

export default SettingsScreen;
